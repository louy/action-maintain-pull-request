name: Maintain One Pull Request
description: Maintain a single pull request given a set of head/base branches
branding:
  icon: git-pull-request
  color: purple
inputs:
  head_ref:
    description: Branch with changes to be merged into base
    required: true
    default: ${{ github.event.pull_request.head.ref }}
  base_ref:
    description: Base branch to receive the changes from head
    required: true
    default: ${{ github.event.pull_request.base.ref || 'main' }}
  pr_title:
    description: |
      Title for the created/updated pull request. Also usually used as merged commit message
    required: true
  pr_body:
    description: Body for the created/updated pull request
    required: true
    default: ""
  delete:
    description: |
      Whether to close a PR if it is open. Set to `true` to do so

  labels:
    description: Comma separated list of labels to add to PR
    required: false

outputs:
  number:
    description: |
      Pull request number, empty when no PR is created or when `delete: true``
    value: ${{ steps.pull-request.outputs.result }}

runs:
  using: "composite"
  steps:
    - name: Create or update pull request
      uses: actions/github-script@v6
      id: pull-request
      env:
        HEAD: ${{ inputs.head_ref }}
        BASE: ${{ inputs.base_ref }}
        PR_TITLE: ${{ inputs.pr_title }}
        PR_BODY: ${{ inputs.pr_body }}
        DELETE: ${{ inputs.delete }}
      with:
        # This step won't trigger GHA checks generally
        result-encoding: string
        script: |
          const { repo, owner } = context.repo;

          const {data: pulls} = await github.request('GET /repos/{owner}/{repo}/pulls{?head,base,state}', {
            owner,
            repo,
            head: `${owner}:${process.env.HEAD}`,
            base: process.env.BASE,
            state: 'open',
          });

          if (pulls.length) {
            console.log("Pull request already exists\n" + pulls[0].url);
            if (process.env.DELETE === 'true') {
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: pulls[0].number,
                state: 'closed',
              });
              console.log("Pull request closed");
              return;
            }
            return String(pulls[0].number);
          } else if (process.env.DELETE === 'true') {
            return; // Do nothing
          }

          const result = await github.rest.pulls.create({
            owner,
            repo,
            head: process.env.PR_BRANCH,
            base: process.env.BASE,
            title: process.env.PR_TITLE,
            body: process.env.PR_BODY,
          });
          console.log("Pull request created\n" + result.data.url);
          return String(result.data.number);
    - if: ${{ steps.pull-request.outputs.result != '' && inputs.labels != '' }}
      name: Add PR labels
      uses: actions/github-script@v6
      env:
        PR_NUMBER: ${{ steps.pull-request.outputs.result }}
        LABELS: ${{ inputs.labels }}
      with:
        script: |
          const { repo, owner } = context.repo;
          const { PR_NUMBER, LABELS } = process.env;

          await github.rest.issues.addLabels({
            owner,
            repo,
            issue_number: Number(PR_NUMBER),
            labels: LABELS.split(','),
          });

          console.log("Added labels to PR");
